{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,aAAY,KACNH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EAnCA,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAA0BC,GACxBA,EAAEC,iBACF,IAAIb,EAAQc,SAASF,EAAEG,cAAcC,SAAShB,MAAMiB,OACpD,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAEG,cAAcC,SAASG,OAAOF,MAAOC,GAAK,EAC/DE,EAAAxB,GAASyB,OAAOC,KAAK,IACrBxB,EAAcoB,EAAGlB,GACduB,MAAKN,IACJG,EAAAxB,GAASyB,OAAOG,QACd,uBAAqBP,EAAIlB,eAAmBkB,EAAEjB,UAAc,IAG/DyB,OAAMR,IACLG,EAAAxB,GAASyB,OAAOK,QACd,sBAAoBT,EAAElB,eAAmBkB,EAAEjB,UAAc,IAG/DA,GAASc,SAASF,EAAEG,cAAcC,SAASW,KAAKV,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', generatePromises);\n\nfunction generatePromises(e) {\n  e.preventDefault();\n  let delay = parseInt(e.currentTarget.elements.delay.value);\n  for (let i = 1; i <= e.currentTarget.elements.amount.value; i += 1) {\n    Notiflix.Notify.init({});\n    createPromise(i, delay)\n      .then(value => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${value.position} in ${value.delay}ms`\n        );\n      })\n      .catch(value => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${value.position} in ${value.delay}ms`\n        );\n      });\n    delay += parseInt(e.currentTarget.elements.step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setInterval","form","document","querySelector","addEventListener","e","preventDefault","parseInt","currentTarget","elements","value","i","amount","$parcel$interopDefault","Notify","init","then","success","catch","failure","step"],"version":3,"file":"03-promises.067848c7.js.map"}